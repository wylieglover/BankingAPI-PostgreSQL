generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  account_id   String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id  String         @db.Uuid
  type         account_type
  balance      Decimal        @default(0.00) @db.Decimal(10, 2)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  customers    customers      @relation(fields: [customer_id], references: [customer_id], onDelete: Cascade, onUpdate: NoAction)
  transactions transactions[]
}

model beneficiaries {
  customer_id    String    @db.Uuid
  name           String    @db.VarChar
  account_number String    @db.VarChar(50)
  bank_details   String    @db.VarChar(255)
  beneficiary_id String    @id(map: "beneficiaries_pk") @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  customers      customers @relation(fields: [customer_id], references: [customer_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_customer_beneficiaries")
}

model customers {
  customer_id   String          @id(map: "pk_customer") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @db.VarChar(255)
  home_address  String          @db.VarChar(255)
  email         String          @db.VarChar(255)
  username      String          @unique @db.VarChar(50)
  password      String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  accounts      accounts[]
  beneficiaries beneficiaries[]
}

model transactions {
  transaction_id Int              @id(map: "transactions_pk") @default(autoincrement())
  account_id     String           @db.Uuid
  type           transaction_type
  amount         Decimal          @default(0.00) @db.Decimal(10, 2)
  timestamp      DateTime?        @default(now()) @db.Timestamp(6)
  accounts       accounts         @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_accounts_fk")
}

enum account_type {
  savings
  checking
  loan
}

enum transaction_type {
  withdrawal
  deposit
}
